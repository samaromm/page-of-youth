{"version":3,"sources":["containers/Todos/Todo/DeleteTodo.js","containers/Todos/Todo/Todo.js","containers/Todos/Todos.js"],"names":["ButtonsWrapper","styled","div","TodoWrapper","MessageWrapper","mapDispatchToProps","deleteTodo","actions","connect","todos","error","loading","show","close","todo","Modal","opened","Heading","noMargin","size","color","bold","title","Button","contain","onClick","a","id","window","location","reload","disabled","Message","localizer","momentLocalizer","moment","TodoSchema","Yup","shape","required","min","AddTodo","props","editEvent","event","setState","isEditing","editTodo","controlModal","toggleAddModal","start","end","startTime","toString","endTime","startVal","endVal","isOpened","state","isDeleting","openModal","initialValues","diary","complete","validationSchema","onSubmit","values","setSubmitting","resetForm","editTodoAction","addTodo","isSubmitting","isValid","type","name","placeholder","component","Input","className","style","height","value","defaultChecked","for","selectable","events","this","defaultView","Views","Month","views","scrollToTime","Date","defaultDate","toDate","onSelectEvent","onSelectSlot","margin","width","eventPropGetter","isSelected","newStyle","backgroundColor","React","Component","compose","firebase","firestore","userId","auth","uid","data","requesting","status","requested","firestoreConnect","content","length","map","push","Todo"],"mappings":"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","file":"static/js/4.91072599.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Modal from \"../../../components/UI/Modal\";\r\nimport Button from \"../../../components/UI/Forms/Button/Button\";\r\nimport Heading from \"../../../components/UI/Headings/Heading\";\r\nimport Message from \"../../../components/UI/Message/Message\";\r\nimport * as actions from \"../../../store/actions\";\r\n\r\nconst ButtonsWrapper = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  margin-bottom: 2rem;\r\n  justify-content: space-around;\r\n`;\r\n\r\nconst TodoWrapper = styled.div`\r\n  margin: 1rem 0rem;\r\n  font-size: 2rem;\r\n  text-align: center;\r\n  color: #f43f54;\r\n`;\r\n\r\nconst MessageWrapper = styled.div`\r\n  position: absolute;\r\n  bottom: 1rem;\r\n  width: 100%;\r\n  padding: 0 3rem;\r\n`;\r\n\r\nconst DeleteTodo = ({ show, close, todo, deleteTodo, error, loading }) => {\r\n  return (\r\n    <Modal opened={show} close={close}>\r\n      <Heading noMargin size=\"h1\" color=\"white\">\r\n        Deleting todo\r\n      </Heading>\r\n      <Heading bold size=\"h4\" color=\"white\">\r\n        Are you sure you want to delete this todo?\r\n      </Heading>\r\n      <TodoWrapper>{todo.title}</TodoWrapper>\r\n      <ButtonsWrapper>\r\n        <Button\r\n          contain\r\n          onClick={async () => {\r\n              await deleteTodo(todo.id);\r\n              window.location.reload(false);\r\n          }}\r\n          disabled={loading}\r\n          loading={loading ? \"Deleting...\" : null}\r\n        >\r\n          Delete\r\n        </Button>\r\n        <Button color=\"main\" contain onClick={close}>\r\n          Cancel\r\n        </Button>\r\n      </ButtonsWrapper>\r\n      <MessageWrapper>\r\n        <Message error show={error}>\r\n          {error}\r\n        </Message>\r\n      </MessageWrapper>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ todos }) => ({\r\n  error: todos.deleteTodo.error,\r\n  loading: todos.deleteTodo.loading,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  deleteTodo: actions.deleteTodo,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DeleteTodo);\r\n","import React from \"react\";\r\nimport { Calendar, Views, momentLocalizer } from \"react-big-calendar\";\r\nimport { connect } from \"react-redux\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik, Field } from \"formik\";\r\nimport moment from \"moment\";\r\nimport DeleteTodo from \"./DeleteTodo\";\r\n\r\nimport \"./calender.css\";\r\nimport Button from \"../../../components/UI/Forms/Button/Button\";\r\nimport Heading from \"../../../components/UI/Headings/Heading\";\r\nimport Modal from \"../../../components/UI/Modal\";\r\nimport Input from \"../../../components/UI/Forms/Input/Input\";\r\nimport Message from \"../../../components/UI/Message/Message\";\r\nimport { StyledForm } from \"../../../layout/elements\";\r\nimport styled from \"styled-components\";\r\n\r\nimport * as actions from \"../../../store/actions\";\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nconst ButtonsWrapper = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  margin-bottom: 2rem;\r\n  justify-content: space-around;\r\n`;\r\n\r\nconst MessageWrapper = styled.div`\r\n  position: absolute;\r\n  bottom: 0rem;\r\n  width: 100%;\r\n  padding: 0 3rem;\r\n`;\r\n\r\nconst TodoSchema = Yup.object().shape({\r\n  title: Yup.string().required(\"The todo is required.\").min(4, \"Too short.\"),\r\n});\r\n\r\nclass AddTodo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEditing: false,\r\n      isDeleting: false,\r\n      editTodo: {},\r\n      isOpened: false,\r\n      startVal: \"Tue July 21 2020 19:30:00 GMT+0300 (Arabian Standard Time)\",\r\n      endVal: \"Wed July 22 2020 19:30:00 GMT+0300 (Arabian Standard Time)\",\r\n    };\r\n  }\r\n\r\n  editEvent = ({ event }) => {\r\n    this.setState(\r\n      {\r\n        isEditing: true,\r\n        editTodo: event,\r\n      },\r\n      this.controlModal()\r\n    );\r\n  };\r\n\r\n  toggleAddModal = ({ start, end }) => {\r\n    const startTime = start.toString();\r\n    const endTime = end.toString();\r\n    this.setState({\r\n      startVal: startTime,\r\n      endVal: endTime,\r\n      isOpened: !this.state.isOpened,\r\n    });\r\n  };\r\n\r\n  controlModal = () => {\r\n    this.setState({\r\n      isOpened: !this.state.isOpened,\r\n      isEditing: false,\r\n      isDeleting: false,\r\n    });\r\n  };\r\n\r\n  close = () => {\r\n    this.setState({\r\n      isOpened: false,\r\n      isEditing: false,\r\n      isDeleting: false,\r\n    });\r\n  };\r\n\r\n  openModal = () => {\r\n    return (\r\n      <Modal opened={this.state.isOpened} close={() => this.controlModal()}>\r\n        <Heading noMargin size=\"h1\" color=\"white\">\r\n          {this.state.isEditing ? \"Edit your todo\" : \"Add your new todo\"}\r\n        </Heading>\r\n        <Heading bold size=\"h4\" color=\"white\">\r\n          {this.state.isEditing\r\n            ? \"Edit your todo and tap edit\"\r\n            : \"Type your todo and press add\"}\r\n        </Heading>\r\n        <Formik\r\n          initialValues={{\r\n            title: this.state.isEditing ? this.state.editTodo.title : \"\",\r\n            start: this.state.isEditing\r\n              ? this.state.editTodo.start\r\n              : this.state.startVal,\r\n            end: this.state.isEditing\r\n              ? this.state.editTodo.end\r\n              : this.state.endVal,\r\n            diary: this.state.isEditing ? this.state.editTodo.diary : \"\",\r\n            complete: this.state.isEditing\r\n              ? this.state.editTodo.complete\r\n              : \"false\",\r\n          }}\r\n          validationSchema={TodoSchema}\r\n          onSubmit={async (values, { setSubmitting, resetForm }) => {\r\n            const res = this.state.isEditing\r\n              ? await this.props.editTodoAction(this.state.editTodo.id, values)\r\n              : await this.props.addTodo(values);\r\n            if (res) {\r\n              this.setState({\r\n                isOpened: false,\r\n                isEditing: false,\r\n              });\r\n            }\r\n            setSubmitting(false);\r\n            resetForm();\r\n          }}\r\n        >\r\n          {({ isSubmitting, isValid, resetForm }) => (\r\n            <StyledForm>\r\n              <Field\r\n                type=\"text\"\r\n                name=\"title\"\r\n                placeholder=\"Write your todo...\"\r\n                component={Input}\r\n                className=\"fieldMargin\"\r\n              />\r\n              <Field\r\n                type=\"textarea\"\r\n                name=\"diary\"\r\n                placeholder=\"(Optional) Enter your diary for today...\"\r\n                component={Input}\r\n                style={{ height: \"100px\" }}\r\n                className=\"fieldMargin\"\r\n              />\r\n              <Field\r\n                type=\"checkbox\"\r\n                name=\"complete\"\r\n                id=\"complete\"\r\n                value=\"complete\"\r\n                component={Input}\r\n                className=\"radioBut\"\r\n                defaultChecked={\r\n                  this.state.isEditing ? this.state.editTodo.complete : \"false\"\r\n                }\r\n              />\r\n              <label for=\"complete\">Completed</label>\r\n              <ButtonsWrapper>\r\n                <Button\r\n                  contain\r\n                  color=\"main\"\r\n                  type=\"submit\"\r\n                  disabled={!isValid || isSubmitting}\r\n                  loading={this.props.loading ? \"Saving...\" : null}\r\n                >\r\n                  {this.state.isEditing ? \"Edit todo\" : \"Add todo\"}\r\n                </Button>\r\n                <Button\r\n                  color=\"main\"\r\n                  contain\r\n                  onClick={() => {\r\n                    this.setState({ isDeleting: true });\r\n                    resetForm();\r\n                  }}\r\n                  className={!this.state.isEditing ? \"hideButton\" : \"\"}\r\n                  type=\"submit\"\r\n                >\r\n                  Delete\r\n                </Button>\r\n                <Button\r\n                  color=\"main\"\r\n                  contain\r\n                  onClick={() => {\r\n                    this.controlModal();\r\n                    resetForm();\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </ButtonsWrapper>\r\n              <MessageWrapper>\r\n                <Message error show={this.props.error}>\r\n                  {this.props.error}\r\n                </Message>\r\n              </MessageWrapper>\r\n            </StyledForm>\r\n          )}\r\n        </Formik>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Calendar\r\n          selectable\r\n          localizer={localizer}\r\n          events={this.props.events}\r\n          defaultView={Views.Month}\r\n          views={[\"month\", \"agenda\"]}\r\n          scrollToTime={new Date(1970, 1, 1, 6)}\r\n          defaultDate={moment().toDate()}\r\n          onSelectEvent={(event) => this.editEvent({ event })}\r\n          onSelectSlot={this.toggleAddModal}\r\n          style={{ height: \"100vh\", margin: \"20px\", width: \"100vh\" }}\r\n          eventPropGetter={(event, start, end, isSelected) => {\r\n            let newStyle = {\r\n              backgroundColor: \"#F43F54\",\r\n            };\r\n            if (event.complete) {\r\n              newStyle.backgroundColor = \"#1ec91e\";\r\n            }\r\n            return {\r\n              className: \"\",\r\n              style: newStyle,\r\n            };\r\n          }}\r\n        />\r\n        {this.state.isOpened ? this.openModal() : \"\"}\r\n        <DeleteTodo\r\n          todo={this.state.editTodo}\r\n          show={this.state.isDeleting}\r\n          close={() => this.close()}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ todos }) => ({\r\n  loading: todos.loading,\r\n  error: todos.error,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  addTodo: actions.addTodo,\r\n  editTodoAction: actions.editTodo,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTodo);","import React from 'react';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\n\r\nimport Todo from './Todo/Todo.js';\r\n\r\nconst Todos = ({ todos, requested, userId }) => {\r\n  let content=[]\r\n  if(todos && !((!todos[userId] && requested[`todos/${userId}`]) ||\r\n  todos[userId].todos.length === 0)) {\r\n        todos[userId].todos.map(todo => (\r\n          content.push({\r\n            title: todo.title,\r\n            id: todo.id,\r\n            start: todo.start,\r\n            end: todo.end,\r\n            diary: todo.diary,\r\n            complete: todo.complete\r\n          })\r\n      ))\r\n    };\r\n\r\n    return (\r\n      <Todo events={content}/>\r\n    );\r\n};  \r\n\r\nconst mapStateToProps = ({ firebase, firestore }) => ({\r\n  userId: firebase.auth.uid,\r\n  todos: firestore.data.todos,\r\n  requesting: firestore.status.requesting,\r\n  requested: firestore.status.requested,\r\n});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default compose(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  ),\r\n  firestoreConnect(props => [`todos/${props.userId}`])\r\n)(Todos);"],"sourceRoot":""}